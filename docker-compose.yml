version: '3'
services:
    nginx:
        image: nginx
        container_name: nginx
        networks:
            main:
                aliases:
                    - "subdomen.test.local"
                    # - "lk.zazajobs.local"
                    # - "admin.zazajobs.local"
                    # - "zazajobs.local"
                    # - "centrifugo.zazajobs.local"
                    # - "centrifugo.smitup.local"
        volumes:
            - ./hosts:/etc/nginx/conf.d
            - ./www:/var/www
            - ./logs:/var/log/nginx
        ports:
            - 80:80
            - 81:81
            - "443:443"
        depends_on:
            - php
            - mysql
    php:
        build: ./images/php
        restart: always
        container_name: php
        networks:
            main:
        volumes:
            - ./images/php/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ./images/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./www:/var/www
            - ~/.local/share/fish:/home/meido/.local/share/fish
            - ~/.config/fish:/home/meido/.config/fish
            - ~/.git-credentials:/home/meido/.git-credentials
    # php8:
    #     build: ./images/php8
    #     restart: always
    #     container_name: php8
    #     networks:
    #         main:
    #     volumes:
    #         - ./images/php8/php.ini:/usr/local/etc/php/conf.d/php.ini
    #         - ./images/php8/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    #         - ./www:/var/www
    #         - ~/.local/share/fish:/home/meido/.local/share/fish
    #         - ~/.config/fish:/home/meido/.config/fish
    #         - ~/.git-credentials:/home/meido/.git-credentials
    # php8-horizon:
    #     build: ./images/php8
    #     restart: always
    #     container_name: horizon8
    #     command: sh -c "cd /var/www/elya-smith-gamification && php artisan horizon"
    #     networks:
    #         main:
    #     volumes:
    #         - ./images/php8/php.ini:/usr/local/etc/php/conf.d/php.ini
    #         - ./images/php8/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    #         - ./www:/var/www
    #         - ~/.local/share/fish:/home/meido/.local/share/fish
    #         - ~/.config/fish:/home/meido/.config/fish
    #         - ~/.git-credentials:/home/meido/.git-credentials
    mysql:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        container_name: mysql
        networks:
            main:
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        ports:
            - 3306:3306
        volumes:
            - ./db/initdb/:/docker-entrypoint-initdb.d/
            - ./db/mysql:/var/lib/mysql
            - ./db/dumps:/dumps
            - ./logs:/var/log/mysql/
    node:
        image: node:14.18.3-alpine3.15
        container_name: node
        networks:
            main:
        working_dir: /app
        stdin_open: true
        mem_limit: 2048m
        ports:
            - 3000:3000
        volumes:
            - ./frontends/elya-smith-front/:/app/ #zazajobs-admin, elya-smith-front
        # command: sh -c "yarn install && yarn run serve" Вот это надо ручками самому запускать
    # clickhouse:
    #     image: yandex/clickhouse-server:21.3.20.1
    #     container_name: clickhouse
    #     networks:
    #         main:
    #     mem_limit: 1024m
    #     ports:
    #         - 8123:8123
    #     volumes:
    #         - ./db/clickhouse:/var/lib/clickhouse
    #         - ./db/dumps:/dumps
    # centrifugo:
    #     image: centrifugo/centrifugo:v3.2.3
    #     command: centrifugo -c laravel-centrifugo.json
    #     container_name: centrifugo
    #     networks:
    #         main:
    #     ports: 
    #         - 8000:8000
    #     volumes: 
    #         - "./config/centrifugo:/centrifugo"
    #     ulimits:
    #         nproc: 65536
    #         nofile:
    #             soft: 65536
    #             hard: 65536
    # postgres:
    #     image: postgres
    #     container_name: postgres
    #     networks:
    #         main:
    #     environment:
    #         POSTGRES_DB: ${POSTGRES_DATABASE}
    #         POSTGRES_USER: ${POSTGRES_USER}
    #         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #     volumes:
    #         - ./db/postregs:/var/lib/postgresql
    #         - ./db/dumps:/dumps
    #         - ./logs:/var/log/postgresql/
    #     ports:
    #     - "5432:5432"
    # redis:
    #     image: redis
    #     container_name: redis
    #     mem_limit: 1024m
    #     networks:
    #         main:
    #     ports:
    #         - 6379:6379
    #     command: ["sh", "-c", "exec redis-server --requirepass \"${REDIS_PASSWORD}\""]

networks:
    main:
        external: True